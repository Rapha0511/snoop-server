{"version":3,"sources":["goldRecord.png","regexEmail.js","snoopAlbums.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","regexEmail","snoopAlbums","name","year","cover","checkEmail","email","test","App","done","event","console","log","state","topAlbum","modalOpen","rapName","isEmailValid","albumSales","albumMenuOpen","startDate","setRapName","_this","setState","target","value","setEmail","setAlbumSales","Math","max","Number","toggleModal","toggleAlbumMenu","selectAlbum","album","setStartDate","date","fetch","method","mode","body","JSON","stringify","getTime","then","response","text","responseText","_this2","this","react_default","a","createElement","className","onChange","length","type","step","filter","x","map","n","key","src","goldRecord","Fragment","alt","onClick","es","selected","viewBox","cx","cy","r","d","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3752e847.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goldRecord.6a2018c3.png\";","// eslint-disable-next-line\nexport default /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;","export default [\n    { name: 'Doggystyle', year: 1993, cover: 'https://upload.wikimedia.org/wikipedia/en/6/63/SnoopDoggyDoggDoggystyle.jpg' },\n    { name: 'Tha Doggfather', year: 1996, cover: 'https://upload.wikimedia.org/wikipedia/en/a/a3/Tha-doggfather.jpg' },\n    { name: 'Da Game is to Be Sold, Not to Be Told', year: 1998, cover: 'https://upload.wikimedia.org/wikipedia/en/c/c5/Gameistobesold.jpg' },\n    { name: 'No Limit Top Dogg', year: 1999, cover: 'https://upload.wikimedia.org/wikipedia/en/d/d1/Snoop_front.JPG' },\n    { name: 'Tha Last Meal', year: 2000, cover: 'https://upload.wikimedia.org/wikipedia/en/d/dc/The_Last_Meal_-_Front.jpeg' },\n];","import React from 'react';\nimport './App.css';\nimport regexEmail from './regexEmail';\nimport goldRecord from './goldRecord.png';\nimport snoopAlbums from './snoopAlbums';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { throwStatement } from '@babel/types';\n\n\nconst checkEmail=(email)=>regexEmail.test(email);\n\nclass App extends React.Component{\n  done=(event)=> {\n    console.log('done applying')\n  }\n  state={\n    topAlbum: snoopAlbums[0],\n    modalOpen: false,\n    rapName:'',\n    email:'',\n    isEmailValid:false,\n    albumSales:1000,\n    albumMenuOpen: false,\n    startDate : null,\n  }\n\n  setRapName=(event)=> {\n    this.setState({\n      rapName:event.target.value,\n    })\n  }\n  setEmail=(event)=> {\n    this.setState({\n      email:event.target.value,\n      isEmailValid:checkEmail(event.target.value),\n    })\n  }\n\n  setAlbumSales=(event)=> {\n    console.log(typeof event.target.value)\n    this.setState({\n      albumSales:Math.max (0, Number(event.target.value)),\n    })\n  }\n\n  toggleModal = ()=>{\n    this.setState({\n      modalOpen : !this.state.modalOpen\n      \n\n    })\n  }\n\n  toggleAlbumMenu = ()=>{\n    this.setState({\n      albumMenuOpen : !this.state.albumMenuOpen,\n    })\n\n  }\n\n\n  selectAlbum = (album) =>this.setState({ topAlbum : album, albumMenuOpen : false })\n  setStartDate = (date) => this.setState({startDate :date})\n  done = (event)=>{\n    this.toggleModal();\n    console.log(\"zbeb zbeb\")\n\n    fetch('/submit',{\n    method : 'POST', mode : 'cors' , body: JSON.stringify({\n    rapName: this.state.rapName,\n    email: this.state.email,\n    albumSales:this.state.albumSales,\n    topAlbum: this.state.topAlbum,\n    startDate : this.state.startDate.getTime(),\n\n      }),\n    }).then(response => response.text())\n      .then(responseText => console.log(responseText));\n  }\n\n\n  render (){\n    console.log(this.state.isEmailValid);\n    return(\n      <div className='App'>\n        <div className='form'>\n          <div className='card swanky-input-container'>\n            <label>\n              <input value={this.state.rapName} onChange={this.setRapName}/>\n              <span className='title'> Rap name</span>\n            </label>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <input value={this.state.email} onChange={this.setEmail}/>\n              <span className='title'> Email</span>\n              {\n                (this.state.isEmailValid || this.state.email.length<1) ? (null):(\n                  <span className='email-invalid'>Please enter a valid email</span>\n                )\n              }\n            </label>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <input type= 'number' step={100} value={this.state.albumSales} onChange={this.setAlbumSales}/>\n              <span className='title'> Album Sales</span>\n            </label>\n            <div className='goldRecords'>\n              {\n                [1,2,3,4,5,6]\n                .filter(x => x*1000 < this.state.albumSales)\n                .map(n=>(\n                  <div className='goldRecord' key={n}>\n                    <img src={goldRecord}/>\n                  </div>\n                ))\n              }\n\n            </div>\n          </div>\n\n          <div className = 'card swanky-input-container'>\n            <label>\n              <span className='title'>top album</span>\n              <div className = 'album-dropdown-base'>\n                {this.state.topAlbum === null ?(\n                  <span>select the best Snoop Album</span>\n                ) :(\n                  <>\n                  <img src={this.state.topAlbum.cover}\n                  alt = {this.state.topAlbum.name}/>\n                  <span>{this.state.topAlbum.year } </span>\n                  <span>{this.state.topAlbum.name} </span>\n                  </>\n                )}\n                <span className='dropdown-arrow' onClick = {this.toggleAlbumMenu}>{this.state.albumMenuOpen ? '▲':'▼'}</span>\n              </div>\n\n              {\n                this.state.albumMenuOpen ?(\n                  <ul className = 'album-menu'>\n                    {\n                      snoopAlbums.map((album)=>(\n                        <li key={album.name} onClick ={()=>this.selectAlbum(album)}>\n                          <img src = {album.cover}/>\n                          <span>{album.year} </span>\n                          <span>{album.name}</span>\n                        </li>\n                      ))\n                    }\n                  </ul>\n                ) : null\n              }\n            </label>\n          </div>\n\n          <div className='card swanky-input-container'>\n            <label>\n              <DatePicker selected = {this.state.startDate}\n              onChange = {this.setStartDate}/>\n              <span className ='title'>start date</span>\n            </label>\n            \n            </div>\n\n\n          <div className='done-container'>\n            <button className=\"done-button\" onClick ={this.done}>Done</button>\n          </div>\n        </div>\n        <div className ={this.state.modalOpen ? 'modal-open' : 'modal-closed'}>\n          <h2>Confirmation</h2>\n          <p>Ready?</p>\n          <button onClick = {this.done}>close modal</button>\n          <svg viewBox =' 0 0 100 100'className = 'x-button' onClick={this.toggleModal}>\n            <circle cx ={50} cy={50} r={47}/>\n            <path d='M 20 20 L 80 80'/>\n            <path d='M 80 20 L 20 80'/>\n          </svg>\n        </div>\n          {\n            this.state.modalOpen ? (<div className='modal-shade' onClick = {this.toggleModal}/>)\n             : null}\n\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}